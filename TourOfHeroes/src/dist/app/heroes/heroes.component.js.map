{"version":3,"file":"heroes.component.js","sourceRoot":"","sources":["../../../Users/piotrblazejewicz/git/tour-of-heroes-for-dotnet/tmp/broccoli_type_script_compiler-input_base_path-Y81gDbuS.tmp/0/src/app/heroes/heroes.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAkC,eAAe,CAAC,CAAA;AAClD,uBAAuB,iBAAiB,CAAC,CAAA;AACzC,iCAA+B,0BAA0B,CAAC,CAAA;AAE1D,+BAA8B,kBAAkB,CAAC,CAAA;AAcjD;IAIE,yBAAoB,MAAc,EAAU,OAAsB;QAA9C,WAAM,GAAN,MAAM,CAAQ;QAAU,YAAO,GAAP,OAAO,CAAe;IAAI,CAAC;IAEvE,kCAAQ,GAAR;QACE,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IAED,gDAAsB,GAAtB,UAAuB,KAAU;QAC/B,IAAI,aAAa,GAAW,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC;QACjE,EAAE,CAAC,CAAC,aAAa,KAAK,SAAS,CAAC,CAAC,CAAC;YAChC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC;QACzD,CAAC;IACH,CAAC;IAEO,mCAAS,GAAjB;QAAA,iBAKC;QAJC,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE;aACrB,IAAI,CAAC,UAAA,MAAM;YACV,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACvB,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,4CAAkB,GAA1B,UAA2B,EAAU;QACnC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC,CAAC;IACtC,CAAC;IAtCH;QAAC,gBAAS,CAAC;YACT,QAAQ,EAAE,MAAM,CAAC,EAAE;YACnB,QAAQ,EAAE,YAAY;YACtB,WAAW,EAAE,uBAAuB;YACpC,SAAS,EAAE,CAAC,sBAAsB,CAAC;YACnC,UAAU,EAAE;gBACV,iCAAc,CAAC,aAAa,CAAC;aAC9B;YACD,SAAS,EAAE;gBACT,8BAAa;aACd;SACF,CAAC;;uBAAA;IA6BF,sBAAC;AAAD,CAAC,AA5BD,IA4BC;AA5BY,uBAAe,kBA4B3B,CAAA","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { PolymerElement } from '@vaadin/angular2-polymer';\nimport { Hero } from '../shared';\nimport { HeroesService } from './heroes.service';\n\n@Component({\n  moduleId: module.id,\n  selector: 'app-heroes',\n  templateUrl: 'heroes.component.html',\n  styleUrls: ['heroes.component.css'],\n  directives: [\n    PolymerElement('vaadin-grid')\n  ],\n  providers: [\n    HeroesService\n  ]\n})\nexport class HeroesComponent implements OnInit {\n\n  heroes: Hero[];\n\n  constructor(private router: Router, private service: HeroesService) { }\n\n  ngOnInit() {\n    this.getHeroes();\n  }\n\n  onSelectedItemsChanged(event: any) {\n    let selectedIndex: number = event.target.selection.selected()[0];\n    if (selectedIndex !== undefined) {\n      this.goToHeroDetailById(this.heroes[selectedIndex].id);\n    }\n  }\n\n  private getHeroes() {\n    this.service.getHeroes()\n      .then(heroes => {\n        this.heroes = heroes;\n      });\n  }\n\n  private goToHeroDetailById(id: number) {\n    this.router.navigate(['/hero', id]);\n  }\n\n}\n"]}