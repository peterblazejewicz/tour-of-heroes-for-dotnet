{"version":3,"file":"heroes.service.js","sourceRoot":"","sources":["../../../Users/piotrblazejewicz/git/tour-of-heroes-for-dotnet/TourOfHeroes/src/TourOfHeroes.Web/tmp/broccoli_type_script_compiler-input_base_path-LvCjjlft.tmp/0/src/app/heroes/heroes.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAA2B,eAAe,CAAC,CAAA;AAG3C,IAAI,MAAM,GAAW;IACnB,EAAE,IAAI,EAAE,EAAE,EAAE,MAAM,EAAE,UAAU,EAAE,UAAU,EAAE,YAAY,EAAE;IAC1D,EAAE,IAAI,EAAE,EAAE,EAAE,MAAM,EAAE,OAAO,EAAE,UAAU,EAAE,YAAY,EAAE;IACvD,EAAE,IAAI,EAAE,EAAE,EAAE,MAAM,EAAE,UAAU,EAAE,UAAU,EAAE,YAAY,EAAE;IAC1D,EAAE,IAAI,EAAE,EAAE,EAAE,MAAM,EAAE,WAAW,EAAE,UAAU,EAAE,YAAY,EAAE;IAC3D,EAAE,IAAI,EAAE,EAAE,EAAE,MAAM,EAAE,SAAS,EAAE,UAAU,EAAE,YAAY,EAAE;IACzD,EAAE,IAAI,EAAE,EAAE,EAAE,MAAM,EAAE,WAAW,EAAE,UAAU,EAAE,YAAY,EAAE;IAC3D,EAAE,IAAI,EAAE,EAAE,EAAE,MAAM,EAAE,QAAQ,EAAE,UAAU,EAAE,YAAY,EAAE;IACxD,EAAE,IAAI,EAAE,EAAE,EAAE,MAAM,EAAE,OAAO,EAAE,UAAU,EAAE,YAAY,EAAE;IACvD,EAAE,IAAI,EAAE,EAAE,EAAE,MAAM,EAAE,OAAO,EAAE,UAAU,EAAE,YAAY,EAAE;IACvD,EAAE,IAAI,EAAE,EAAE,EAAE,MAAM,EAAE,SAAS,EAAE,UAAU,EAAE,YAAY,EAAE;CAC1D,CAAA;AAED,IAAI,aAAa,GAAoB,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;AAE7D;;;;;GAKG;AAEH;IAAA;IAqBA,CAAC;IAnBC;;;;OAIG;IACH,iCAAS,GAAT;QACE,MAAM,CAAC,aAAa,CAAC;IACvB,CAAC;IAED;;;;;OAKG;IACH,+BAAO,GAAP,UAAQ,EAAmB;QACzB,MAAM,CAAC,aAAa;aACjB,IAAI,CAAC,UAAA,MAAM,IAAI,OAAA,MAAM,CAAC,MAAM,CAAC,UAAA,IAAI,IAAI,OAAA,IAAI,CAAC,EAAE,KAAK,CAAC,EAAE,EAAf,CAAe,CAAC,CAAC,CAAC,CAAC,EAAzC,CAAyC,CAAC,CAAA;IAC9D,CAAC;IArBH;QAAC,iBAAU,EAAE;;qBAAA;IAsBb,oBAAC;AAAD,CAAC,AArBD,IAqBC;AArBY,qBAAa,gBAqBzB,CAAA","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Hero } from '../shared';\n\nlet HEROES: Hero[] = [\n  { \"id\": 11, \"name\": \"Mr. Nice\", \"birthday\": \"1980-01-11\" },\n  { \"id\": 12, \"name\": \"Narco\", \"birthday\": \"1980-01-12\" },\n  { \"id\": 13, \"name\": \"Bombasto\", \"birthday\": \"1980-01-13\" },\n  { \"id\": 14, \"name\": \"Celeritas\", \"birthday\": \"1980-01-14\" },\n  { \"id\": 15, \"name\": \"Magneta\", \"birthday\": \"1980-01-15\" },\n  { \"id\": 16, \"name\": \"RubberMan\", \"birthday\": \"1980-01-16\" },\n  { \"id\": 17, \"name\": \"Dynama\", \"birthday\": \"1980-01-17\" },\n  { \"id\": 18, \"name\": \"Dr IQ\", \"birthday\": \"1980-01-18\" },\n  { \"id\": 19, \"name\": \"Magma\", \"birthday\": \"1980-01-19\" },\n  { \"id\": 20, \"name\": \"Tornado\", \"birthday\": \"1980-01-20\" }\n]\n\nlet heroesPromise: Promise<Hero[]> = Promise.resolve(HEROES);\n\n/**\n * (description)\n *\n * @export\n * @class HeroesService\n */\n@Injectable()\nexport class HeroesService {\n\n  /**\n   * (description)\n   *\n   * @returns {Promise<Hero[]>} (description)\n   */\n  getHeroes(): Promise<Hero[]> {\n    return heroesPromise;\n  }\n\n  /**\n   * (description)\n   *\n   * @param {(number | string)} id (description)\n   * @returns (description)\n   */\n  getHero(id: number | string): Promise<Hero> {\n    return heroesPromise\n      .then(heroes => heroes.filter(hero => hero.id === +id)[0])\n  }\n}\n\n"]}